
  protected $model;
  
  public function __construct()
  {
    $this->model = new Models\{{model_name}}();
  }

  public function index($info, $limit = 20, $offset = 1)
  {
    $where = $this->model
      ->when(!empty($info['name']), function ($query) use ($info) {
        return $query->where('name', 'like', '%' . $info['name'] . '%');
      });
    $total = $where->count();
    if ($total < 1) {
      return array('total' => 0, 'list' => []);
    } else {
      $list  = $where
        ->latest()
        ->latest('updated_at')
        ->limit($limit)
        ->offset($offset)
        ->get()
        ->toArray();
      return array('total' => $total, 'list' => $list);
    }
  }
  public function create($info)
  {
    verifyRepetition($this->model, [['name', '=', $info['name']]]);
    try {
      $id = $this->model->insert($info);
      if ($id) {
        success();
      } else {
        error(errorCode()::CREATE_NO, __('api.create_no'));
      }
    } catch (\Exception $e) {
      error(errorCode()::ERROR_CATCH, __('api.catch'));
    }
  }
  public function update($id, $info)
  {
    verifyRepetition($this->model, [['name', '=', $info['name']], ['id', '<>', $id]]);
    try {
      $is_exists = $this->model->where('id', $id)->exists();
      if (!$is_exists) {
        error(errorCode()::is_exists, __('api.is_exists'));
      }
      $up_id = $this->model->where('id', $id)->update($info);
      if ($up_id) {
        success();
      } else {
        error(errorCode()::UPDATED_NO, __('api.updated_no'));
      }
    } catch (\Exception $e) {
      error(errorCode()::ERROR_CATCH, __('api.catch'));
    }
  }
  public function setState($id, $info)
  {
    $res = $this->model->where('id', $id)->update(['state' => $info['state'], 'updated_at' => $info['updated_at']]);
    if ($res) {
      success();
    } else {
      error();
    }
  }
  public function show($id)
  {
    $info = $this->model->find($id);
    if ($info) {
      return $info->toArray();
    } else {
      return null;
    }
  }
  public function destroy($id)
  {
    if (!is_array($id)) {
      $id = [$id];
    }
    $res = $this->model->whereIn('id', $id)->delete();
    if ($res) {
      success();
    } else {
      error(errorCode()::DELETE_NO, __('api.delete_no'));
    }
  }
  /**
   * 数字格式化存储
   */
  public function toNumberFormatter($info)
  {
    $info['price'] = toNum($info['price']);
    return $info;
  }
  /**
   * 数字可视化
   */
  public function humNumberFormatter($info)
  {
    $info['price'] = humanNum($info['price']);
    return $info;
  }