<?php

namespace App\Http\Middleware;

use Closure;
use Illuminate\Http\Request;

class ApiToken
{
  protected $except = [
    'api/v1/test'
  ];
  /**
   * Handle an incoming request.
   *
   * @param  \Illuminate\Http\Request  $request
   * @param  \Closure  $next
   * @return mixed
   */
  public function handle($request, Closure $next)
  {
    if ($this->shouldPassThrough($request)) {
      return $next($request);
    }
    if (!$request->header('token')) {
      error(errorCode()::REQUIRED_TOKEN, __('api.required_login'));
    }
    $data = jwtDeCode($request->header('token'), 'app.api_key');
    if (!$data) {
      error(errorCode()::REQUIRED_TOKEN, __('api.login_time'));
    } else {
      $res['id'] = $data['id'];
      $res['iat'] = time();
      $res['exp'] = getTimeAdd(config('app.jwt_time'));
      $token = jwtEnCode($res, 'app.api_key');
      $request->offsetSet('key_uid', $res['id']);
      session(['token' => $token]);
    }
    return $next($request);
  }
  /**
   * @param Request $request
   * @return bool
   */
  protected function shouldPassThrough(Request $request): bool
  {
    return collect($this->except)
      ->contains(function ($except) use ($request) {
        if ($except !== '/') {
          $except = trim($except, '/');
        }
        return $request->is($except);
      });
  }
}
