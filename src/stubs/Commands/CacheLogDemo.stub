<?php

namespace App\Console\Commands;

use Illuminate\Console\Command;
use Illuminate\Support\Facades\Artisan;

class CacheLog extends Command
{
    /**
     * The name and signature of the console command.
     *
     * @var string
     */
    protected $signature = 'cache {all?}';

    /**
     * The console command description.
     *
     * @var string
     */
    protected $description = 'cache';

    /**
     * Create a new command instance.
     *
     * @return void
     */
    public function __construct()
    {
        parent::__construct();
    }

    /**
     * Execute the console command.
     *
     * @return int
     */
    public function handle()
    {

        $all = $this->argument('all');
        if (!$all) {
            Artisan::call('cache:clear'); //清空应用缓存
            Artisan::call('config:clear'); //移除配置缓存文件
            Artisan::call('route:clear'); //移除路由缓存文件

            Artisan::call('config:cache'); //合并所有的配置信息为一个，提高加载速度
            Artisan::call('route:cache'); //生成路由缓存文件来提升路由效率
            // $info = getCurl('http://127.0.0.1/api/v1/test');
            // echo json_encode($info);
            if (function_exists('logMyImg')) {
                $this->info('缓存已清除' . logMyImg());
            } else {
                $this->info('缓存已清除');
            }
        } else {
            if ($all == 'del') {
                clearAllCache();
                $this->info('删除缓存成功');
                die;
            }
       
            Artisan::call('cache:clear'); //清空应用缓存
            Artisan::call('config:clear'); //移除配置缓存文件
            Artisan::call('route:clear'); //移除路由缓存文件

            Artisan::call('config:cache'); //合并所有的配置信息为一个，提高加载速度
            Artisan::call('route:cache'); //生成路由缓存文件来提升路由效率
            $this->info('文件重新加载中............');
            exec('composer dump-autoload'); //重新加载文件
            $this->info('文件重新加载成功............');

            if (function_exists('logMyImg')) {
                $this->info('缓存已清除' . logMyImg());
            } else {
                $this->info('缓存已清除');
            }
        }
    }
}
