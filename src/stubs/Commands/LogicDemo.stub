<?php

namespace App\Console\Commands;

use Illuminate\Console\Command;

class Logic extends Command
{
     /**
     * The name and signature of the console command.
     *
     * @var string
     */
    protected $signature = 'make:logic  {namespace} {class_name} {describe?} ';

    /**
     * The console command description.
     *
     * @var string
     */
    protected $description = 'make logic';

    /**
     * Create a new command instance.
     *
     * @return void
     */
    public function __construct()
    {
        parent::__construct();
    }

    /**
     * Execute the console command.
     *
     * @return int
     */
    public function handle()
    {
        $args = $this->arguments();
        //模块名称 Admin Api
        $namespace = $args['namespace'];
        //类名称
        $class_name = $args['class_name'];
        //描述
        $describe = $args['describe'];
        //逻辑层文件地址
        $logic_file = app_path() . '/Logic' . "/{$namespace}/" . $class_name . '.php';
        //命名空间
        $logic_path = dirname($logic_file); //返回路径中的目录部分
        //获取模板,替换变量
        $logic = file_get_contents(base_path('/stubs/my_logic.stub'));
        $source = str_replace('{{namespace}}', $namespace, $logic);
        $source = str_replace('{{describe}}', $describe, $source);
        $source = str_replace('{{class_name}}', $class_name, $source);
        $source = str_replace('{{logic_default}}', '', $source);
        $source = str_replace('{{model_name}}', $class_name, $source);
        $this->createFileSend($logic_file, $logic_path, $source, '逻辑层');

    }
      /**
     * 执行文件创建
     */
    public function createFileSend($logic_file, $logic_path, $source, $message = '')
    {
        //是否已存在相同文件
        if (file_exists($logic_file)) {
            $this->error("{$message}文件已存在");
            exit;
        }
        //创建
        if (file_exists($logic_path) === false) {
            if (mkdir($logic_path, 0777, true) === false) {
                $this->error("{$message}目录" . $logic_path . '没有写入权限');
                exit;
            }
        }
        //写入
        if (!file_put_contents($logic_file, $source)) {
            $this->error("{$message}创建失败！");
            exit;
        }
        $this->info("{$message}创建成功！");
    }
}
