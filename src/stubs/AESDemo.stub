<?php

namespace App\MyClass;

class AES
{

    protected $mac = '4e2782d5-b49b-4d26-9277-49f110fbb9d6';

    /**
     * 解密
     * @param string $string 待解密的字符串
     * @param string $mac 电脑mac 不得小于32位字符串
     * @return string 解密后的字符串，如果密钥长度不足或解密失败，则返回空字符串
     */
    public function decrypt(string $string)
    {
        // 确保MAC地址长度至少为32位
        if (strlen($this->mac) < 32) {
            return '';
        }
        // 截取密钥前32个字符
        $key = substr($this->mac, 0, 32);
        // 使用MD5生成IV
        $iv = substr(md5($this->mac), 0, 16);

        // 解密，确保输入的是Base64编码的字符串
        $encryptedData = base64_decode($string);
        $data = openssl_decrypt($encryptedData, 'AES-256-CBC', $key, OPENSSL_RAW_DATA, $iv);

        // 如果解密失败，返回空字符串
        if ($data === false) {
            return '';
        }

        return trim($data);
    }

    /**
     * 加密
     */
    public function encrypt(string $string, string $mode = 'AES-128-CBC', int $len = 32)
    {
        if (!$string || strlen($this->mac) < 32) return '';
        $str = $this->mac;
        // for ($i = 0; $i < strlen($this->mac); $i++) {
        //     if (strlen($str) < 16 && $i % 2 == 0) {
        //         $str .= $this->mac[$i];
        //     }
        // }
        $key = substr($str, 0, $len);
        $iv = substr(md5($str), 0, 16);
        $encrypted = openssl_encrypt($string, $mode, $key, 0, $iv);
        return $encrypted;
    }
    public function setMac(string $mac)
    {
        $this->mac = $mac;
        return $this;
    }
}
